"""
Django settings for OFF project.

Generated by 'django-admin startproject' using Django 5.2.6.
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# ======================
# CONFIGURAÇÕES BÁSICAS
# ======================

BASE_DIR = Path(__file__).resolve().parent.parent

# Carrega variáveis do .env se existir
env_path = BASE_DIR / '.env'
if env_path.exists():
    load_dotenv(env_path)
else:
    print(">>> MARCADOR: .env não encontrado, usando valores do sistema")

# ======================
# AMBIENTE
# ======================
TARGET_ENV = os.getenv('TARGET_ENV', 'dev')  # 'dev' ou 'prod'
NOT_PROD = TARGET_ENV != 'prod'

print(">>> MARCADOR: TARGET_ENV =", TARGET_ENV)
print(">>> MARCADOR: NOT_PROD =", NOT_PROD)

# ======================
# MODO DE DESENVOLVIMENTO
# ======================
if NOT_PROD:
    DEBUG = False
    SECRET_KEY = 'django-insecure-cxqukjo1i+k72)^x5x=e5*$r8&t6tz%*%a8q@@cnm=wf)-lncf'
    ALLOWED_HOSTS = []
    CSRF_TRUSTED_ORIGINS = []
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# ======================
# MODO DE PRODUÇÃO
# ======================
else:
    DEBUG = os.getenv('DEBUG', '0').lower() in ['true', 't', '1']
    SECRET_KEY = os.getenv('SECRET_KEY')

    # ALLOWED_HOSTS e CSRF
    ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'onlyfootballfanscc.azurewebsites.net').split(',')
    CSRF_TRUSTED_ORIGINS = os.getenv(
        'CSRF_TRUSTED_ORIGINS',
        'https://onlyfootballfanscc.azurewebsites.net'
    ).split(' ')

    # HTTPS se ativado
    SECURE_SSL_REDIRECT = os.getenv('SECURE_SSL_REDIRECT', '0').lower() in ['true', 't', '1']
    if SECURE_SSL_REDIRECT:
        SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

    # Banco de dados PostgreSQL
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ.get('DBNAME'),
            'HOST': os.environ.get('DBHOST'),
            'USER': os.environ.get('DBUSER'),
            'PASSWORD': os.environ.get('DBPASS'),
            'OPTIONS': {'sslmode': 'require'},
        }
    }

# ======================
# APLICAÇÕES
# ======================
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'whitenoise.runserver_nostatic',
    'core',
]

# ======================
# MIDDLEWARE
# ======================
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ======================
# CONFIGURAÇÃO PRINCIPAL
# ======================
ROOT_URLCONF = 'OFF.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'OFF.wsgi.application'

# ======================
# VALIDAÇÃO DE SENHAS
# ======================
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ======================
# INTERNACIONALIZAÇÃO
# ======================
LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True

# ======================
# ARQUIVOS ESTÁTICOS
# ======================
STATIC_URL = os.environ.get('DJANGO_STATIC_URL', "/static/")
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# ======================
# ARQUIVOS DE MÍDIA
# ======================
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ======================
# CONFIGURAÇÃO DE USUÁRIO PERSONALIZADO
# ======================
AUTH_USER_MODEL = 'core.Usuario'

# ======================
# LOGIN / LOGOUT
# ======================
LOGIN_URL = 'core:login'
LOGIN_REDIRECT_URL = 'core:home'
LOGOUT_REDIRECT_URL = 'core:home'

# ======================
# SESSÕES
# ======================
SESSION_COOKIE_AGE = 60 * 60 * 24 * 30
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# ======================
# PADRÃO DO DJANGO
# ======================
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
